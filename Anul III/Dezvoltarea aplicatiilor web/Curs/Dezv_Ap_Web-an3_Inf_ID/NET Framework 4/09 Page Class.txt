Page Class
.NET Framework 4 Other Versions 
Represents an .aspx file, also known as a Web Forms page, requested from a server that hosts an ASP.NET Web application.

Inheritance Hierarchy
System.Object 
  System.Web.UI.Control
    System.Web.UI.TemplateControl
      System.Web.UI.Page
        System.Web.UI.DataVisualization.Charting.ChartHttpHandler
        System.Web.UI.MobileControls.MobilePage
Namespace:  System.Web.UI
Assembly:  System.Web (in System.Web.dll)

public class Page : TemplateControl, IHttpHandler
The Page type exposes the following members.

Constructors
 	Name	Description
	Page	Initializes a new instance of the Page class.
Top
Properties
 	Name	Description
	Adapter	Gets the browser-specific adapter for the control. (Inherited from Control.)
	Application	Gets the HttpApplicationState object for the current Web request.
	AppRelativeTemplateSourceDirectory	Gets or sets the application-relative virtual directory of the Page or UserControl object that contains this control. (Inherited from Control.)
	AppRelativeVirtualPath	Gets or sets the application-relative, virtual directory path to the file from which the control is parsed and compiled. (Inherited from TemplateControl.)
	AspCompatMode	Infrastructure. Sets a value indicating whether the page can be executed on a single-threaded apartment (STA) thread.
	AsyncMode	Infrastructure. Sets a value indicating whether the page is processed synchronously or asynchronously.
	AsyncTimeout	Infrastructure. Gets or sets a value indicating the time-out interval used when processing asynchronous tasks.
	AutoHandlers	Infrastructure. Obsolete. The AutoHandlers property has been deprecated in ASP.NET NET 2.0. It is used by generated classes and is not intended for use within your code. (Inherited from TemplateControl.)
	AutoPostBackControl	Gets or sets the control in the page that is used to perform postbacks.
	BindingContainer	Infrastructure. Gets the control that contains this control's data binding. (Inherited from Control.)
	Buffer	Infrastructure. Sets a value indicating whether the page output is buffered.
	Cache	Gets the Cache object associated with the application in which the page resides.
	ChildControlsCreated	Gets a value that indicates whether the server control's child controls have been created. (Inherited from Control.)
	ClientID	Gets the control ID for HTML markup that is generated by ASP.NET. (Inherited from Control.)
	ClientIDMode	Gets or sets the algorithm that is used to generate the value of the ClientID property. (Inherited from Control.)
	ClientIDSeparator	Gets a character value representing the separator character used in the ClientID property. (Inherited from Control.)
	ClientQueryString	Gets the query string portion of the requested URL.
	ClientScript	Gets a ClientScriptManager object used to manage, register, and add script to the page.
	ClientTarget	Gets or sets a value that allows you to override automatic detection of browser capabilities and to specify how a page is rendered for particular browser clients.
	CodePage	Infrastructure. Sets the code page identifier for the current Page.
	ContentType	Infrastructure. Sets the HTTP MIME type for the HttpResponse object associated with the page.
	Context	Gets the HttpContext object associated with the page. (Overrides Control.Context.)
	Controls	Gets a ControlCollection object that represents the child controls for a specified server control in the UI hierarchy. (Inherited from Control.)
	Culture	Infrastructure. Sets the culture ID for the Thread object associated with the page.
	DataItemContainer	Gets a reference to the naming container if the naming container implements IDataItemContainer. (Inherited from Control.)
	DataKeysContainer	Gets a reference to the naming container if the naming container implements IDataKeysControl. (Inherited from Control.)
	DesignMode	Gets a value indicating whether a control is being used on a design surface. (Inherited from Control.)
	EnableEventValidation	Gets or sets a value indicating whether the page validates postback and callback events.
	EnableTheming	Gets or sets a Boolean value indicating whether themes apply to the control that is derived from the TemplateControl class. (Inherited from TemplateControl.)
	EnableViewState	Gets or sets a value indicating whether the page maintains its view state, and the view state of any server controls it contains, when the current page request ends. (Overrides Control.EnableViewState.)
	EnableViewStateMac	Gets or sets a value indicating whether ASP.NET should check message authentication codes (MAC) in the page's view state when the page is posted back from the client.
	ErrorPage	Gets or sets the error page to which the requesting browser is redirected in the event of an unhandled page exception.
	Events	Gets a list of event handler delegates for the control. This property is read-only. (Inherited from Control.)
	FileDependencies	Infrastructure. Obsolete. Sets an array of files that the current HttpResponse object is dependent upon.
	Form	Gets the HTML form for the page.
	HasChildViewState	Gets a value indicating whether the current server control's child controls have any saved view-state settings. (Inherited from Control.)
	Header	Gets the document header for the page if the head element is defined with a runat=server in the page declaration.
	ID	Gets or sets an identifier for a particular instance of the Page class. (Overrides Control.ID.)
	IdSeparator	Infrastructure. Gets the character used to separate control identifiers when building a unique ID for a control on a page.
	IsAsync	Gets a value indicating whether the page is processed asynchronously.
	IsCallback	Gets a value that indicates whether the page request is the result of a callback.
	IsChildControlStateCleared	Gets a value indicating whether controls contained within this control have control state. (Inherited from Control.)
	IsCrossPagePostBack	Gets a value indicating whether the page is involved in a cross-page postback.
	IsPostBack	Gets a value that indicates whether the page is being rendered for the first time or is being loaded in response to a postback.
	IsPostBackEventControlRegistered	Gets a value that indicates whether the control in the page that performs postbacks has been registered.
	IsReusable	Infrastructure. Gets a value indicating whether the Page object can be reused.
	IsTrackingViewState	Gets a value that indicates whether the server control is saving changes to its view state. (Inherited from Control.)
	IsValid	Gets a value indicating whether page validation succeeded.
	IsViewStateEnabled	Gets a value indicating whether view state is enabled for this control. (Inherited from Control.)
	Items	Gets a list of objects stored in the page context.
	LCID	Infrastructure. Sets the locale identifier for the Thread object associated with the page.
	LoadViewStateByID	Gets a value indicating whether the control participates in loading its view state by ID instead of index. (Inherited from Control.)
	MaintainScrollPositionOnPostBack	Gets or sets a value indicating whether to return the user to the same position in the client browser after postback. This property replaces the obsolete SmartNavigation property.
	Master	Gets the master page that determines the overall look of the page.
	MasterPageFile	Gets or sets the virtual path of the master page.
	MaxPageStateFieldLength	Gets or sets the maximum length for the page's state field.
	MetaDescription	Gets or sets the content of the "description" meta element.
	MetaKeywords	Gets or sets the content of the "keywords" meta element.
	NamingContainer	Gets a reference to the server control's naming container, which creates a unique namespace for differentiating between server controls with the same Control.ID property value. (Inherited from Control.)
	Page	Gets a reference to the Page instance that contains the server control. (Inherited from Control.)
	PageAdapter	Gets the adapter that renders the page for the specific requesting browser.
	PageStatePersister	Gets the PageStatePersister object associated with the page.
	Parent	Gets a reference to the server control's parent control in the page control hierarchy. (Inherited from Control.)
	PreviousPage	Gets the page that transferred control to the current page.
	RenderingCompatibility	Gets a value that specifies the ASP.NET version that rendered HTML will be compatible with. (Inherited from Control.)
	Request	Gets the HttpRequest object for the requested page.
	Response	Gets the HttpResponse object associated with the Page object. This object allows you to send HTTP response data to a client and contains information about that response.
	ResponseEncoding	Infrastructure. Sets the encoding language for the current HttpResponse object.
	RouteData	Gets the RequestContext.RouteData value of the current System.Web.Routing.RequestContext instance.
	Server	Gets the Server object, which is an instance of the HttpServerUtility class.
	Session	Gets the current Session object provided by ASP.NET.
	Site	Gets information about the container that hosts the current control when rendered on a design surface. (Inherited from Control.)
	SkinID	Gets or sets the skin to apply to the control. (Inherited from Control.)
	SmartNavigation	Obsolete. Gets or sets a value indicating whether smart navigation is enabled. This property is deprecated.
	StyleSheetTheme	Gets or sets the name of the theme that is applied to the page early in the page life cycle.
	SupportAutoEvents	Infrastructure. Gets a value indicating whether the TemplateControl control supports automatic events. (Inherited from TemplateControl.)
	TemplateControl	Gets or sets a reference to the template that contains this control. (Inherited from Control.)
	TemplateSourceDirectory	Gets the virtual directory of the Page or UserControl that contains the current server control. (Inherited from Control.)
	Theme	Gets or sets the name of the page theme.
	Title	Gets or sets the title for the page.
	Trace	Gets the TraceContext object for the current Web request.
	TraceEnabled	Infrastructure. Sets a value indicating whether tracing is enabled for the Page object.
	TraceModeValue	Infrastructure. Sets the mode in which trace statements are displayed on the page.
	TransactionMode	Infrastructure. Sets the level of transaction support for the page.
	UICulture	Infrastructure. Sets the user interface (UI) ID for the Thread object associated with the page.
	UniqueFilePathSuffix	Gets a unique suffix to append to the file path for caching browsers.
	UniqueID	Gets the unique, hierarchically qualified identifier for the server control. (Inherited from Control.)
	User	Gets information about the user making the page request.
	Validators	Gets a collection of all validation controls contained on the requested page.
	ViewState	Gets a dictionary of state information that allows you to save and restore the view state of a server control across multiple requests for the same page. (Inherited from Control.)
	ViewStateEncryptionMode	Gets or sets the encryption mode of the view state.
	ViewStateIgnoresCase	Gets a value that indicates whether the StateBag object is case-insensitive. (Inherited from Control.)
	ViewStateMode	Gets or sets the view-state mode of this control. (Inherited from Control.)
	ViewStateUserKey	Assigns an identifier to an individual user in the view-state variable associated with the current page.
	Visible	Gets or sets a value indicating whether the Page object is rendered. (Overrides Control.Visible.)
Top
Methods
 	Name	Description
	AddContentTemplate	Infrastructure. Called during page initialization to create a collection of content (from content controls) that is handed to a master page, if the current page or master page refers to a master page.
	AddedControl	Called after a child control is added to the Controls collection of the Control object. (Inherited from Control.)
	AddOnPreRenderCompleteAsync(BeginEventHandler, EndEventHandler)	Registers beginning and ending event handler delegates that do not require state information for an asynchronous page.
	AddOnPreRenderCompleteAsync(BeginEventHandler, EndEventHandler, Object)	Registers beginning and ending event handler delegates for an asynchronous page.
	AddParsedSubObject	Notifies the server control that an element, either XML or HTML, was parsed, and adds the element to the server control's ControlCollection object. (Inherited from Control.)
	AddWrappedFileDependencies	Infrastructure. Adds a list of dependent files that make up the current page. This method is used internally by the ASP.NET page framework and is not intended to be used directly from your code.
	ApplyStyleSheetSkin	Applies the style properties defined in the page style sheet to the control. (Inherited from Control.)
	AspCompatBeginProcessRequest	Infrastructure. Initiates a request for Active Server Page (ASP) resources. This method is provided for compatibility with legacy ASP applications.
	AspCompatEndProcessRequest	Infrastructure. Terminates a request for Active Server Page (ASP) resources. This method is provided for compatibility with legacy ASP applications.
	AsyncPageBeginProcessRequest	Infrastructure. Begins processing an asynchronous page request.
	AsyncPageEndProcessRequest	Infrastructure. Ends processing an asynchronous page request.
	BuildProfileTree	Infrastructure. Gathers information about the server control and delivers it to the Trace property to be displayed when tracing is enabled for the page. (Inherited from Control.)
	ClearCachedClientID	Infrastructure. Sets the cached ClientID value to Nothing. (Inherited from Control.)
	ClearChildControlState	Deletes the control-state information for the server control's child controls. (Inherited from Control.)
	ClearChildState	Deletes the view-state and control-state information for all the server control's child controls. (Inherited from Control.)
	ClearChildViewState	Deletes the view-state information for all the server control's child controls. (Inherited from Control.)
	ClearEffectiveClientIDMode	Infrastructure. Sets the ClientIDMode property of the current control instance and of any child controls to Inherit. (Inherited from Control.)
	Construct	Performs design-time logic. (Inherited from TemplateControl.)
	CreateChildControls	Called by the ASP.NET page framework to notify server controls that use composition-based implementation to create any child controls they contain in preparation for posting back or rendering. (Inherited from Control.)
	CreateControlCollection	Creates a new ControlCollection object to hold the child controls (both literal and server) of the server control. (Inherited from Control.)
	CreateHtmlTextWriter	Creates an HtmlTextWriter object to render the page's content.
  	CreateHtmlTextWriterFromType	Infrastructure. Creates a specified HtmlTextWriter object to render the page's content.
	CreateResourceBasedLiteralControl	Infrastructure. Accesses literal strings stored in a resource. The CreateResourceBasedLiteralControl method is not intended for use from within your code. (Inherited from TemplateControl.)
	DataBind	Binds a data source to the invoked server control and all its child controls. (Inherited from Control.)
	DataBind(Boolean)	Binds a data source to the invoked server control and all its child controls with an option to raise the DataBinding event. (Inherited from Control.)
	DataBindChildren	Binds a data source to the server control's child controls. (Inherited from Control.)
	DesignerInitialize	Infrastructure. Performs any initialization of the instance of the Page class that is required by RAD designers. This method is used only at design time.
	DeterminePostBackMode	Returns a NameValueCollection of data posted back to the page using either a POST or a GET command.
	Dispose	Enables a server control to perform final clean up before it is released from memory. (Inherited from Control.)
	EnsureChildControls	Determines whether the server control contains child controls. If it does not, it creates child controls. (Inherited from Control.)
	EnsureID	Creates an identifier for controls that do not have an identifier assigned. (Inherited from Control.)
	Equals(Object)	Determines whether the specified Object is equal to the current Object. (Inherited from Object.)
	Eval(String)	Evaluates a data-binding expression. (Inherited from TemplateControl.)
	Eval(String, String)	Evaluates a data-binding expression using the specified format string to display the result. (Inherited from TemplateControl.)
	ExecuteRegisteredAsyncTasks	Starts the execution of an asynchronous task.
	Finalize	Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)
	FindControl(String)	Searches the page naming container for a server control with the specified identifier. (Overrides Control.FindControl(String).)
	FindControl(String, Int32)	Infrastructure. Searches the current naming container for a server control with the specified id and an integer, specified in the pathOffset parameter, which aids in the search. You should not override this version of the FindControl method. (Inherited from Control.)
	Focus	Sets input focus to a control. (Inherited from Control.)
	FrameworkInitialize	Initializes the control tree during page generation based on the declarative nature of the page. (Overrides TemplateControl.FrameworkInitialize.)
	GetDataItem	Gets the data item at the top of the data-binding context stack.
	GetDesignModeState	Infrastructure. Gets design-time data for a control. (Inherited from Control.)
	GetGlobalResourceObject(String, String)	Gets an application-level resource object based on the specified ClassKey and ResourceKey properties. (Inherited from TemplateControl.)
	GetGlobalResourceObject(String, String, Type, String)	Gets an application-level resource object based on the specified ClassKey and ResourceKey properties, object type, and property name of the resource. (Inherited from TemplateControl.)
	GetHashCode	Serves as a hash function for a particular type. (Inherited from Object.)
	GetLocalResourceObject(String)	Gets a page-level resource object based on the specified ResourceKey property. (Inherited from TemplateControl.)
	GetLocalResourceObject(String, Type, String)	Gets a page-level resource object based on the specified ResourceKey property, object type, and property name. (Inherited from TemplateControl.)
	GetPostBackClientEvent	Obsolete. Gets a reference that can be used in a client event to post back to the server for the specified control and with the specified event arguments.
	GetPostBackClientHyperlink	Obsolete. Gets a reference, with javascript: appended to the beginning of it, that can be used in a client event to post back to the server for the specified control and with the specified event arguments.
	GetPostBackEventReference(Control)	Obsolete. Returns a string that can be used in a client event to cause postback to the server. The reference string is defined by the specified Control object.
	GetPostBackEventReference(Control, String)	Obsolete. Returns a string that can be used in a client event to cause postback to the server. The reference string is defined by the specified control that handles the postback and a string argument of additional event information.
	GetRouteUrl(Object)	Gets the URL that corresponds to a set of route parameters. (Inherited from Control.)
	GetRouteUrl(RouteValueDictionary)	Gets the URL that corresponds to a set of route parameters. (Inherited from Control.)
	GetRouteUrl(String, Object)	Gets the URL that corresponds to a set of route parameters and a route name. (Inherited from Control.)
	GetRouteUrl(String, RouteValueDictionary)	Gets the URL that corresponds to a set of route parameters and a route name. (Inherited from Control.)
	GetType	Gets the Type of the current instance. (Inherited from Object.)
	GetTypeHashCode	Infrastructure. Retrieves a hash code that is generated by Page objects that are generated at run time. This hash code is unique to the Page object's control hierarchy.
	GetUniqueIDRelativeTo	Returns the prefixed portion of the UniqueID property of the specified control. (Inherited from Control.)
	GetValidators	Returns a collection of control validators for a specified validation group.
	GetWrappedFileDependencies	Infrastructure. Returns a list of physical file names that correspond to a list of virtual file locations.
	HasControls	Determines if the server control contains any child controls. (Inherited from Control.)
	HasEvents	Returns a value indicating whether events are registered for the control or any child controls. (Inherited from Control.)
	InitializeCulture	Sets the Culture and UICulture for the current thread of the page.
	InitOutputCache(OutputCacheParameters)	Infrastructure. Initializes the output cache for the current page request based on an OutputCacheParameters object.
	InitOutputCache(Int32, String, String, OutputCacheLocation, String)	Infrastructure. Initializes the output cache for the current page request.
	InitOutputCache(Int32, String, String, String, OutputCacheLocation, String)	Infrastructure. Initializes the output cache for the current page request.
	IsClientScriptBlockRegistered	Obsolete. Determines whether the client script block with the specified key is registered with the page.
	IsLiteralContent	Infrastructure. Determines if the server control holds only literal content. (Inherited from Control.)
	IsStartupScriptRegistered	Obsolete. Determines whether the client startup script is registered with the Page object.
	LoadControl(String)	Loads a Control object from a file based on a specified virtual path. (Inherited from TemplateControl.)
	LoadControl(Type, Object())	Loads a Control object based on a specified type and constructor parameters. (Inherited from TemplateControl.)
	LoadControlState	Restores control-state information from a previous page request that was saved by the SaveControlState method. (Inherited from Control.)
	LoadPageStateFromPersistenceMedium	Loads any saved view-state information to the Page object.
	LoadTemplate	Obtains an instance of the ITemplate interface from an external file. (Inherited from TemplateControl.)
	LoadViewState	Restores view-state information from a previous page request that was saved by the SaveViewState method. (Inherited from Control.)
	MapPath	Retrieves the physical path that a virtual path, either absolute or relative, or an application-relative path maps to.
	MapPathSecure	Retrieves the physical path that a virtual path, either absolute or relative, maps to. (Inherited from Control.)
	MemberwiseClone	Creates a shallow copy of the current Object. (Inherited from Object.)
	OnAbortTransaction	Raises the AbortTransaction event. (Inherited from TemplateControl.)
	OnBubbleEvent	Determines whether the event for the server control is passed up the page's UI server control hierarchy. (Inherited from Control.)
	OnCommitTransaction	Raises the CommitTransaction event. (Inherited from TemplateControl.)
	OnDataBinding	Raises the DataBinding event. (Inherited from Control.)
	OnError	Raises the Error event. (Inherited from TemplateControl.)
	OnInit	Raises the Init event to initialize the page. (Overrides Control.OnInit(EventArgs).)
	OnInitComplete	Raises the InitComplete event after page initialization.
	OnLoad	Raises the Load event. (Inherited from Control.)
	OnLoadComplete	Raises the LoadComplete event at the end of the page load stage.
	OnPreInit	Raises the PreInit event at the beginning of page initialization.
	OnPreLoad	Raises the PreLoad event after postback data is loaded into the page server controls but before the OnLoad event.
	OnPreRender	Raises the PreRender event. (Inherited from Control.)
	OnPreRenderComplete	Raises the PreRenderComplete event after the OnPreRenderComplete event and before the page is rendered.
	OnSaveStateComplete	Raises the SaveStateComplete event after the page state has been saved to the persistence medium.
	OnUnload	Raises the Unload event. (Inherited from Control.)
	OpenFile	Gets a Stream used to read a file. (Inherited from Control.)
	ParseControl(String)	Parses an input string into a Control object on the Web Forms page or user control. (Inherited from TemplateControl.)
	ParseControl(String, Boolean)	Parses an input string into a Control object on the ASP.NET Web page or user control. (Inherited from TemplateControl.)
	ProcessRequest	Infrastructure. Sets the intrinsic server objects of the Page object, such as the Context, Request, Response, and Application properties.
	RaiseBubbleEvent	Assigns any sources of the event and its information to the control's parent. (Inherited from Control.)
	RaisePostBackEvent	Notifies the server control that caused the postback that it should handle an incoming postback event.
	ReadStringResource	Infrastructure. Reads a string resource. The ReadStringResource method is not intended for use from within your code. (Inherited from TemplateControl.)
	RegisterArrayDeclaration	Obsolete. Declares a value that is declared as an ECMAScript array declaration when the page is rendered.
	RegisterAsyncTask	Registers a new asynchronous task with the page.
	RegisterClientScriptBlock	Obsolete. Emits client-side script blocks to the response.
	RegisterHiddenField	Obsolete. Allows server controls to automatically register a hidden field on the form. The field will be sent to the Page object when the HtmlForm server control is rendered.
	RegisterOnSubmitStatement	Obsolete. Allows a page to access the client OnSubmit event. The script should be a function call to client code registered elsewhere.
	RegisterRequiresControlState	Registers a control as one whose control state must be persisted.
	RegisterRequiresPostBack	Registers a control as one that requires postback handling when the page is posted back to the server.
	RegisterRequiresRaiseEvent	Registers an ASP.NET server control as one requiring an event to be raised when the control is processed on the Page object.
	RegisterRequiresViewStateEncryption	Registers a control with the page as one requiring view-state encryption.
	RegisterStartupScript	Obsolete. Emits a client-side script block in the page response.
	RegisterViewStateHandler	Causes page view state to be persisted, if called.
	RemovedControl	Called after a child control is removed from the Controls collection of the Control object. (Inherited from Control.)
	Render	Initializes the HtmlTextWriter object and calls on the child controls of the Page to render. (Overrides Control.Render(HtmlTextWriter).)
	RenderChildren	Outputs the content of a server control's children to a provided HtmlTextWriter object, which writes the content to be rendered on the client. (Inherited from Control.)
	RenderControl(HtmlTextWriter)	Outputs server control content to a provided HtmlTextWriter object and stores tracing information about the control if tracing is enabled. (Inherited from Control.)
	RenderControl(HtmlTextWriter, ControlAdapter)	Outputs server control content to a provided HtmlTextWriter object using a provided ControlAdapter object. (Inherited from Control.)
	RequiresControlState	Determines whether the specified Control object is registered to participate in control state management.
	ResolveAdapter	Gets the control adapter responsible for rendering the specified control. (Inherited from Control.)
	ResolveClientUrl	Gets a URL that can be used by the browser. (Inherited from Control.)
	ResolveUrl	Converts a URL into one that is usable on the requesting client. (Inherited from Control.)
	SaveControlState	Saves any server control state changes that have occurred since the time the page was posted back to the server. (Inherited from Control.)
	SavePageStateToPersistenceMedium	Saves any view-state and control-state information for the page.
	SaveViewState	Saves any server control view-state changes that have occurred since the time the page was posted back to the server. (Inherited from Control.)
	SetDesignModeState	Sets design-time data for a control. (Inherited from Control.)
	SetFocus(Control)	Sets the browser focus to the specified control.
	SetFocus(String)	Sets the browser focus to the control with the specified identifier.
	SetRenderMethodDelegate	Infrastructure. Assigns an event handler delegate to render the server control and its content into its parent control. (Inherited from Control.)
	SetStringResourcePointer	Infrastructure. Sets a pointer to a string resource. The SetStringResourcePointer method is used by generated classes and is not intended for use from within your code. (Inherited from TemplateControl.)
	TestDeviceFilter	Returns a Boolean value indicating whether a device filter applies to the HTTP request. (Inherited from TemplateControl.)
	ToString	Returns a string that represents the current object. (Inherited from Object.)
	TrackViewState	Causes tracking of view-state changes to the server control so they can be stored in the server control's StateBag object. This object is accessible through the Control.ViewState property. (Inherited from Control.)
	UnregisterRequiresControlState	Stops persistence of control state for the specified control.
	Validate	Instructs any validation controls included on the page to validate their assigned information.
	Validate(String)	Instructs the validation controls in the specified validation group to validate their assigned information.
	VerifyRenderingInServerForm	Confirms that an HtmlForm control is rendered for the specified ASP.NET server control at run time.
	WriteUTF8ResourceString	Infrastructure. Writes a resource string to an HtmlTextWriter control. The WriteUTF8ResourceString method is used by generated classes and is not intended for use from within your code. (Inherited from TemplateControl.)
	XPath(String)	Evaluates an XPath data-binding expression. (Inherited from TemplateControl.)
	XPath(String, String)	Evaluates an XPath data-binding expression using the specified format string to display the result. (Inherited from TemplateControl.)
	XPath(String, IXmlNamespaceResolver)	Evaluates an XPath data-binding expression using the specified prefix and namespace mappings for namespace resolution. (Inherited from TemplateControl.)
	XPath(String, String, IXmlNamespaceResolver)	Evaluates an XPath data-binding expression using the specified prefix and namespace mappings for namespace resolution and the specified format string to display the result. (Inherited from TemplateControl.)
	XPathSelect(String)	Evaluates an XPath data-binding expression and returns a node collection that implements the IEnumerable interface. (Inherited from TemplateControl.)
	XPathSelect(String, IXmlNamespaceResolver)	Evaluates an XPath data-binding expression using the specified prefix and namespace mappings for namespace resolution and returns a node collection that implements the IEnumerable interface. (Inherited from TemplateControl.)
Top
Events
 	Name	Description
	AbortTransaction	Occurs when a user ends a transaction. (Inherited from TemplateControl.)
	CommitTransaction	Occurs when a transaction completes. (Inherited from TemplateControl.)
	DataBinding	Occurs when the server control binds to a data source. (Inherited from Control.)
	Disposed	Occurs when a server control is released from memory, which is the last stage of the server control lifecycle when an ASP.NET page is requested. (Inherited from Control.)
	Error	Occurs when an unhandled exception is thrown. (Inherited from TemplateControl.)
	Init	Occurs when the server control is initialized, which is the first step in its lifecycle. (Inherited from Control.)
	InitComplete	Occurs when page initialization is complete.
	Load	Occurs when the server control is loaded into the Page object. (Inherited from Control.)
	LoadComplete	Occurs at the end of the load stage of the page's life cycle.
	PreInit	Occurs at the beginning of page initialization.
	PreLoad	Occurs before the page Load event.
	PreRender	Occurs after the Control object is loaded but prior to rendering. (Inherited from Control.)
	PreRenderComplete	Occurs before the page content is rendered.
	SaveStateComplete	Occurs after the page has completed saving all view state and control state information for the page and controls on the page.
	Unload	Occurs when the server control is unloaded from memory. (Inherited from Control.)
Top
Extension Methods
 	Name	Description
	FindDataSourceControl	Returns the data source that is associated with the data control for the specified control. (Defined by DynamicDataExtensions.)
	FindFieldTemplate	Returns the field template for the specified column in the specified control's naming container. (Defined by DynamicDataExtensions.)
	FindMetaTable	Returns the metatable object for the containing data control. (Defined by DynamicDataExtensions.)
Top
Fields
 	Name	Description
  	postEventArgumentID	Infrastructure. A string that defines the EVENTARGUMENT hidden field in the rendered page.
  	postEventSourceID	Infrastructure. A string that defines the EVENTTARGET hidden field in the rendered page.
Top
Explicit Interface Implementations
 	Name	Description
  	IControlBuilderAccessor.ControlBuilder	For a description of this member, see IControlBuilderAccessor.ControlBuilder. (Inherited from Control.)
  	IControlDesignerAccessor.GetDesignModeState	For a description of this member, see IControlDesignerAccessor.GetDesignModeState. (Inherited from Control.)
  	IControlDesignerAccessor.SetDesignModeState	For a description of this member, see IControlDesignerAccessor.SetDesignModeState. (Inherited from Control.)
  	IControlDesignerAccessor.SetOwnerControl	Infrastructure. For a description of this member, see IControlDesignerAccessor.SetOwnerControl. (Inherited from Control.)
  	IControlDesignerAccessor.UserData	For a description of this member, see IControlDesignerAccessor.UserData. (Inherited from Control.)
  	IDataBindingsAccessor.DataBindings	For a description of this member, see IDataBindingsAccessor.DataBindings. (Inherited from Control.)
  	IDataBindingsAccessor.HasDataBindings	For a description of this member, see IDataBindingsAccessor.HasDataBindings. (Inherited from Control.)
  	IExpressionsAccessor.Expressions	For a description of this member, see IExpressionsAccessor.Expressions. (Inherited from Control.)
  	IExpressionsAccessor.HasExpressions	For a description of this member, see IExpressionsAccessor.HasExpressions. (Inherited from Control.)
  	IFilterResolutionService.CompareFilters	Infrastructure. Returns a value that indicates whether a parent/child relationship exists between two specified device filters. (Inherited from TemplateControl.)
  	IFilterResolutionService.EvaluateFilter	Infrastructure. Returns a value that indicates whether the specified filter is a type of the current filter object. (Inherited from TemplateControl.)
  	IParserAccessor.AddParsedSubObject	For a description of this member, see IParserAccessor.AddParsedSubObject. (Inherited from Control.)