String Class

[SerializableAttribute]
[ComVisibleAttribute(true)]
public sealed class String : IComparable, 
	ICloneable, IConvertible, IComparable<string>, IEnumerable<char>, 
	IEnumerable, IEquatable<string>

Constructors
	String(Char*)	Initializes a new instance of the String class to the value indicated by a specified pointer to an array of Unicode characters.
    	String(Char())	Initializes a new instance of the String class to the value indicated by an array of Unicode characters.
  	String(SByte*)	Initializes a new instance of the String class to the value indicated by a pointer to an array of 8-bit signed integers.
  	String(Char, Int32)	Initializes a new instance of the String class to the value indicated by a specified Unicode character repeated a specified number of times.
  	String(Char*, Int32, Int32)	Initializes a new instance of the String class to the value indicated by a specified pointer to an array of Unicode characters, a starting character position within that array, and a length.
  	String(Char(), Int32, Int32)	Initializes a new instance of the String class to the value indicated by an array of Unicode characters, a starting character position within that array, and a length.
	String(SByte*, Int32, Int32)	Initializes a new instance of the String class to the value indicated by a specified pointer to an array of 8-bit signed integers, a starting character position within that array, and a length.
	String(SByte*, Int32, Int32, Encoding)	Initializes a new instance of the String class to the value indicated by a specified pointer to an array of 8-bit signed integers, a starting character position within that array, a length, and an Encoding object.

Properties
  	Chars	Gets the Char object at a specified position in the current String object.
    	Length	Gets the number of characters in the current String object.

Methods
	Clone	Returns a reference to this instance of String.
    	Compare(String, String)	Compares two specified String objects and returns an integer that indicates their relative position in the sort order.
    	Compare(String, String, Boolean)	Compares two specified String objects, ignoring or honoring their case, and returns an integer that indicates their relative position in the sort order.
      	Compare(String, String, StringComparison)	Compares two specified String objects using the specified rules, and returns an integer that indicates their relative position in the sort order.
    	Compare(String, String, Boolean, CultureInfo)	Compares two specified String objects, ignoring or honoring their case, and using culture-specific information to influence the comparison, and returns an integer that indicates their relative position in the sort order.
    	Compare(String, String, CultureInfo, CompareOptions)	Compares two specified String objects using the specified comparison options and culture-specific information to influence the comparison, and returns an integer that indicates the relationship of the two strings to each other in the sort order.
    	Compare(String, Int32, String, Int32, Int32)	Compares substrings of two specified String objects and returns an integer that indicates their relative position in the sort order.
    	Compare(String, Int32, String, Int32, Int32, Boolean)	Compares substrings of two specified String objects, ignoring or honoring their case, and returns an integer that indicates their relative position in the sort order.
      	Compare(String, Int32, String, Int32, Int32, StringComparison)	Compares substrings of two specified String objects using the specified rules, and returns an integer that indicates their relative position in the sort order.
    	Compare(String, Int32, String, Int32, Int32, Boolean, CultureInfo)	Compares substrings of two specified String objects, ignoring or honoring their case and using culture-specific information to influence the comparison, and returns an integer that indicates their relative position in the sort order.
  	Compare(String, Int32, String, Int32, Int32, CultureInfo, CompareOptions)	Compares substrings of two specified String objects using the specified comparison options and culture-specific information to influence the comparison, and returns an integer that indicates the relationship of the two substrings to each other in the sort order.
      	CompareOrdinal(String, String)	Compares two specified String objects by evaluating the numeric values of the corresponding Char objects in each string.
      	CompareOrdinal(String, Int32, String, Int32, Int32)	Compares substrings of two specified String objects by evaluating the numeric values of the corresponding Char objects in each substring.
  	CompareTo(Object)	Compares this instance with a specified Object and indicates whether this instance precedes, follows, or appears in the same position in the sort order as the specified Object.
  	CompareTo(String)	Compares this instance with a specified String object and indicates whether this instance precedes, follows, or appears in the same position in the sort order as the specified String.
      	Concat(Object)	Creates the string representation of a specified object.
      	Concat(Object())	Concatenates the string representations of the elements in a specified Object array.
  	Concat(IEnumerable(Of String))	Concatenates the members of a constructed IEnumerable(Of T) collection of type String.
      	Concat(String())	Concatenates the elements of a specified String array.
      	Concat(Object, Object)	Concatenates the string representations of two specified objects.
      	Concat(String, String)	Concatenates two specified instances of String.
      	Concat(Object, Object, Object)	Concatenates the string representations of three specified objects.
      	Concat(String, String, String)	Concatenates three specified instances of String.
  	Concat(Object, Object, Object, Object)	Concatenates the string representations of four specified objects and any objects specified in an optional variable length parameter list.
      	Concat(String, String, String, String)	Concatenates four specified instances of String.
  	Concat(Of T)(IEnumerable(Of T))	Concatenates the members of an IEnumerable(Of T) implementation.
    	Contains	Returns a value indicating whether the specified String object occurs within this string.
    	Copy	Creates a new instance of String with the same value as a specified String.
    	CopyTo	Copies a specified number of characters from a specified position in this instance to a specified position in an array of Unicode characters.
  	EndsWith(String)	Determines whether the end of this string instance matches the specified string.
    	EndsWith(String, StringComparison)	Determines whether the end of this string instance matches the specified string when compared using the specified comparison option.
	EndsWith(String, Boolean, CultureInfo)	Determines whether the end of this string instance matches the specified string when compared using the specified culture.
    	Equals(Object)	Determines whether this instance and a specified object, which must also be a String object, have the same value. (Overrides Object.Equals(Object).)
    	Equals(String)	Determines whether this instance and another specified String object have the same value.
      	Equals(String, String)	Determines whether two specified String objects have the same value.
    	Equals(String, StringComparison)	Determines whether this string and a specified String object have the same value. A parameter specifies the culture, case, and sort rules used in the comparison.
      	Equals(String, String, StringComparison)	Determines whether two specified String objects have the same value. A parameter specifies the culture, case, and sort rules used in the comparison.
    	Finalize	Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)
    	Format(String, Object)	Replaces one or more format items in a specified string with the string representation of a specified object.
      	Format(String, Object())	Replaces the format item in a specified string with the string representation of a corresponding object in a specified array.
      	Format(IFormatProvider, String, Object())	Replaces the format item in a specified string with the string representation of a corresponding object in a specified array. A specified parameter supplies culture-specific formatting information.
    	Format(String, Object, Object)	Replaces the format items in a specified string with the string representation of two specified objects.
    	Format(String, Object, Object, Object)	Replaces the format items in a specified string with the string representation of three specified objects.
  	GetEnumerator	Retrieves an object that can iterate through the individual characters in this string.
    	GetHashCode	Returns the hash code for this string. (Overrides Object.GetHashCode.)
    	GetType	Gets the Type of the current instance. (Inherited from Object.)
  	GetTypeCode	Returns the TypeCode for class String.
    	IndexOf(Char)	Reports the index of the first occurrence of the specified Unicode character in this string.
  	IndexOf(String)	Reports the index of the first occurrence of the specified string in this instance.
    	IndexOf(Char, Int32)	Reports the index of the first occurrence of the specified Unicode character in this string. The search starts at a specified character position.
  	IndexOf(String, Int32)	Reports the index of the first occurrence of the specified string in this instance. The search starts at a specified character position.
    	IndexOf(String, StringComparison)	Reports the index of the first occurrence of the specified string in the current String object. A parameter specifies the type of search to use for the specified string.
    	IndexOf(Char, Int32, Int32)	Reports the index of the first occurrence of the specified character in this instance. The search starts at a specified character position and examines a specified number of character positions.
  	IndexOf(String, Int32, Int32)	Reports the index of the first occurrence of the specified string in this instance. The search starts at a specified character position and examines a specified number of character positions.
    	IndexOf(String, Int32, StringComparison)	Reports the index of the first occurrence of the specified string in the current String object. Parameters specify the starting search position in the current string and the type of search to use for the specified string.
    	IndexOf(String, Int32, Int32, StringComparison)	Reports the index of the first occurrence of the specified string in the current String object. Parameters specify the starting search position in the current string, the number of characters in the current string to search, and the type of search to use for the specified string.
    	IndexOfAny(Char())	Reports the index of the first occurrence in this instance of any character in a specified array of Unicode characters.
    	IndexOfAny(Char(), Int32)	Reports the index of the first occurrence in this instance of any character in a specified array of Unicode characters. The search starts at a specified character position.
    	IndexOfAny(Char(), Int32, Int32)	Reports the index of the first occurrence in this instance of any character in a specified array of Unicode characters. The search starts at a specified character position and examines a specified number of character positions.
    	Insert	Inserts a specified instance of String at a specified index position in this instance.
    	Intern	Retrieves the system's reference to the specified String.
    	IsInterned	Retrieves a reference to a specified String.
	IsNormalized	Indicates whether this string is in Unicode normalization form C.
	IsNormalized(NormalizationForm)	Indicates whether this string is in the specified Unicode normalization form.
      	IsNullOrEmpty	Indicates whether the specified string is Nothing or an Empty string.
  	IsNullOrWhiteSpace	Indicates whether a specified string is Nothing, empty, or consists only of white-space characters.
  	Join(String, IEnumerable(Of String))	Concatenates the members of a constructed IEnumerable(Of T) collection of type String, using the specified separator between each member.
  	Join(String, Object())	Concatenates the elements of an object array, using the specified separator between each element.
      	Join(String, String())	Concatenates all the elements of a string array, using the specified separator between each element.
      	Join(String, String(), Int32, Int32)	Concatenates the specified elements of a string array, using the specified separator between each element.
  	Join(Of T)(String, IEnumerable(Of T))	Concatenates the members of a collection, using the specified separator between each member.
    	LastIndexOf(Char)	Reports the index position of the last occurrence of a specified Unicode character within this instance.
  	LastIndexOf(String)	Reports the index position of the last occurrence of a specified string within this instance.
    	LastIndexOf(Char, Int32)	Reports the index position of the last occurrence of a specified Unicode character within this instance. The search starts at a specified character position.
  	LastIndexOf(String, Int32)	Reports the index position of the last occurrence of a specified string within this instance. The search starts at a specified character position.
    	LastIndexOf(String, StringComparison)	Reports the index of the last occurrence of a specified string within the current String object. A parameter specifies the type of search to use for the specified string.
    	LastIndexOf(Char, Int32, Int32)	Reports the index position of the last occurrence of the specified Unicode character in a substring within this instance. The search starts at a specified character position and examines a specified number of character positions.
  	LastIndexOf(String, Int32, Int32)	Reports the index position of the last occurrence of a specified string within this instance. The search starts at a specified character position and examines a specified number of character positions.
    	LastIndexOf(String, Int32, StringComparison)	Reports the index of the last occurrence of a specified string within the current String object. Parameters specify the starting search position in the current string, and type of search to use for the specified string.
    	LastIndexOf(String, Int32, Int32, StringComparison)	Reports the index position of the last occurrence of a specified string within this instance. Parameters specify the starting search position in the current string, the number of characters in the current string to search, and the type of search to use for the specified string.
    	LastIndexOfAny(Char())	Reports the index position of the last occurrence in this instance of one or more characters specified in a Unicode array.
    	LastIndexOfAny(Char(), Int32)	Reports the index position of the last occurrence in this instance of one or more characters specified in a Unicode array. The search starts at a specified character position.
    	LastIndexOfAny(Char(), Int32, Int32)	Reports the index position of the last occurrence in this instance of one or more characters specified in a Unicode array. The search starts at a specified character position and examines a specified number of character positions.
    	MemberwiseClone	Creates a shallow copy of the current Object. (Inherited from Object.)
	Normalize	Returns a new string whose textual value is the same as this string, but whose binary representation is in Unicode normalization form C.
	Normalize(NormalizationForm)	Returns a new string whose textual value is the same as this string, but whose binary representation is in the specified Unicode normalization form.
    	PadLeft(Int32)	Returns a new string that right-aligns the characters in this instance by padding them with spaces on the left, for a specified total length.
    	PadLeft(Int32, Char)	Returns a new string that right-aligns the characters in this instance by padding them on the left with a specified Unicode character, for a specified total length.
    	PadRight(Int32)	Returns a new string that left-aligns the characters in this string by padding them with spaces on the right, for a specified total length.
    	PadRight(Int32, Char)	Returns a new string that left-aligns the characters in this string by padding them on the right with a specified Unicode character, for a specified total length.
	Remove(Int32)	Deletes all the characters from this string beginning at a specified position and continuing through the last position.
    	Remove(Int32, Int32)	Deletes a specified number of characters from this instance beginning at a specified position.
    	Replace(Char, Char)	Returns a new string in which all occurrences of a specified Unicode character in this instance are replaced with another specified Unicode character.
    	Replace(String, String)	Returns a new string in which all occurrences of a specified string in the current instance are replaced with another specified string.
    	Split(Char())	Returns a string array that contains the substrings in this instance that are delimited by elements of a specified Unicode character array.
	Split(Char(), Int32)	Returns a string array that contains the substrings in this instance that are delimited by elements of a specified Unicode character array. A parameter specifies the maximum number of substrings to return.
  	Split(Char(), StringSplitOptions)	Returns a string array that contains the substrings in this string that are delimited by elements of a specified Unicode character array. A parameter specifies whether to return empty array elements.
  	Split(String(), StringSplitOptions)	Returns a string array that contains the substrings in this string that are delimited by elements of a specified string array. A parameter specifies whether to return empty array elements.
	Split(Char(), Int32, StringSplitOptions)	Returns a string array that contains the substrings in this string that are delimited by elements of a specified Unicode character array. Parameters specify the maximum number of substrings to return and whether to return empty array elements.
	Split(String(), Int32, StringSplitOptions)	Returns a string array that contains the substrings in this string that are delimited by elements of a specified string array. Parameters specify the maximum number of substrings to return and whether to return empty array elements.
  	StartsWith(String)	Determines whether the beginning of this string instance matches the specified string.
    	StartsWith(String, StringComparison)	Determines whether the beginning of this string instance matches the specified string when compared using the specified comparison option.
	StartsWith(String, Boolean, CultureInfo)	Determines whether the beginning of this string instance matches the specified string when compared using the specified culture.
    	Substring(Int32)	Retrieves a substring from this instance. The substring starts at a specified character position.
    	Substring(Int32, Int32)	Retrieves a substring from this instance. The substring starts at a specified character position and has a specified length.
    	ToCharArray	Copies the characters in this instance to a Unicode character array.
	ToCharArray(Int32, Int32)	Copies the characters in a specified substring in this instance to a Unicode character array.
  	ToLower	Returns a copy of this string converted to lowercase.
  	ToLower(CultureInfo)	Returns a copy of this string converted to lowercase, using the casing rules of the specified culture.
  	ToLowerInvariant	Returns a copy of this String object converted to lowercase using the casing rules of the invariant culture.
    	ToString	Returns this instance of String; no actual conversion is performed. (Overrides Object.ToString.)
  	ToString(IFormatProvider)	Returns this instance of String; no actual conversion is performed.
  	ToUpper	Returns a copy of this string converted to uppercase.
  	ToUpper(CultureInfo)	Returns a copy of this string converted to uppercase, using the casing rules of the specified culture.
  	ToUpperInvariant	Returns a copy of this String object converted to uppercase using the casing rules of the invariant culture.
    	Trim	Removes all leading and trailing white-space characters from the current String object.
    	Trim(Char())	Removes all leading and trailing occurrences of a set of characters specified in an array from the current String object.
    	TrimEnd	Removes all trailing occurrences of a set of characters specified in an array from the current String object.
    	TrimStart	Removes all leading occurrences of a set of characters specified in an array from the current String object.

Operators
      	Equality	Determines whether two specified strings have the same value.
      	Inequality	Determines whether two specified strings have different values.

Extension Methods
	Aggregate(Of Char)(Func(Of Char, Char, Char))	Overloaded. Applies an accumulator function over a sequence. (Defined by Enumerable.)
  	Aggregate(Of Char, TAccumulate)(TAccumulate, Func(Of TAccumulate, Char, TAccumulate))	Overloaded. Applies an accumulator function over a sequence. The specified seed value is used as the initial accumulator value. (Defined by Enumerable.)
  	Aggregate(Of Char, TAccumulate, TResult)(TAccumulate, Func(Of TAccumulate, Char, TAccumulate), Func(Of TAccumulate, TResult))	Overloaded. Applies an accumulator function over a sequence. The specified seed value is used as the initial accumulator value, and the specified function is used to select the result value. (Defined by Enumerable.)
  	All(Of Char)	Determines whether all elements of a sequence satisfy a condition. (Defined by Enumerable.)
  	Any(Of Char)	Overloaded. Determines whether a sequence contains any elements. (Defined by Enumerable.)
  	Any(Of Char)(Func(Of Char, Boolean))	Overloaded. Determines whether any element of a sequence satisfies a condition. (Defined by Enumerable.)
  	AsEnumerable(Of Char)	Returns the input typed as IEnumerable(Of T). (Defined by Enumerable.)
	AsParallel	Overloaded. Enables parallelization of a query. (Defined by ParallelEnumerable.)
	AsParallel(Of Char)	Overloaded. Enables parallelization of a query. (Defined by ParallelEnumerable.)
	AsQueryable	Overloaded. Converts an IEnumerable to an IQueryable. (Defined by Queryable.)
	AsQueryable(Of Char)	Overloaded. Converts a generic IEnumerable(Of T) to a generic IQueryable(Of T). (Defined by Queryable.)
  	Average(Of Char)(Func(Of Char, Int32))	Overloaded. Computes the average of a sequence of Int32 values that are obtained by invoking a transform function on each element of the input sequence. (Defined by Enumerable.)
  	Average(Of Char)(Func(Of Char, Nullable(Of Int32)))	Overloaded. Computes the average of a sequence of nullable Int32 values that are obtained by invoking a transform function on each element of the input sequence. (Defined by Enumerable.)
  	Average(Of Char)(Func(Of Char, Int64))	Overloaded. Computes the average of a sequence of Int64 values that are obtained by invoking a transform function on each element of the input sequence. (Defined by Enumerable.)
  	Average(Of Char)(Func(Of Char, Nullable(Of Int64)))	Overloaded. Computes the average of a sequence of nullable Int64 values that are obtained by invoking a transform function on each element of the input sequence. (Defined by Enumerable.)
  	Average(Of Char)(Func(Of Char, Single))	Overloaded. Computes the average of a sequence of Single values that are obtained by invoking a transform function on each element of the input sequence. (Defined by Enumerable.)
  	Average(Of Char)(Func(Of Char, Nullable(Of Single)))	Overloaded. Computes the average of a sequence of nullable Single values that are obtained by invoking a transform function on each element of the input sequence. (Defined by Enumerable.)
  	Average(Of Char)(Func(Of Char, Double))	Overloaded. Computes the average of a sequence of Double values that are obtained by invoking a transform function on each element of the input sequence. (Defined by Enumerable.)
  	Average(Of Char)(Func(Of Char, Nullable(Of Double)))	Overloaded. Computes the average of a sequence of nullable Double values that are obtained by invoking a transform function on each element of the input sequence. (Defined by Enumerable.)
  	Average(Of Char)(Func(Of Char, Decimal))	Overloaded. Computes the average of a sequence of Decimal values that are obtained by invoking a transform function on each element of the input sequence. (Defined by Enumerable.)
  	Average(Of Char)(Func(Of Char, Nullable(Of Decimal)))	Overloaded. Computes the average of a sequence of nullable Decimal values that are obtained by invoking a transform function on each element of the input sequence. (Defined by Enumerable.)
  	Cast(Of TResult)	Casts the elements of an IEnumerable to the specified type. (Defined by Enumerable.)
  	Concat(Of Char)	Concatenates two sequences. (Defined by Enumerable.)
  	Contains(Of Char)(Char)	Overloaded. Determines whether a sequence contains a specified element by using the default equality comparer. (Defined by Enumerable.)
  	Contains(Of Char)(Char, IEqualityComparer(Of Char))	Overloaded. Determines whether a sequence contains a specified element by using a specified IEqualityComparer(Of T). (Defined by Enumerable.)
  	Count(Of Char)	Overloaded. Returns the number of elements in a sequence. (Defined by Enumerable.)
  	Count(Of Char)(Func(Of Char, Boolean))	Overloaded. Returns a number that represents how many elements in the specified sequence satisfy a condition. (Defined by Enumerable.)
  	DefaultIfEmpty(Of Char)	Overloaded. Returns the elements of the specified sequence or the type parameter's default value in a singleton collection if the sequence is empty. (Defined by Enumerable.)
  	DefaultIfEmpty(Of Char)(Char)	Overloaded. Returns the elements of the specified sequence or the specified value in a singleton collection if the sequence is empty. (Defined by Enumerable.)
  	Distinct(Of Char)	Overloaded. Returns distinct elements from a sequence by using the default equality comparer to compare values. (Defined by Enumerable.)
  	Distinct(Of Char)(IEqualityComparer(Of Char))	Overloaded. Returns distinct elements from a sequence by using a specified IEqualityComparer(Of T) to compare values. (Defined by Enumerable.)
  	ElementAt(Of Char)	Returns the element at a specified index in a sequence. (Defined by Enumerable.)
  	ElementAtOrDefault(Of Char)	Returns the element at a specified index in a sequence or a default value if the index is out of range. (Defined by Enumerable.)
  	Except(Of Char)(IEnumerable(Of Char))	Overloaded. Produces the set difference of two sequences by using the default equality comparer to compare values. (Defined by Enumerable.)
  	Except(Of Char)(IEnumerable(Of Char), IEqualityComparer(Of Char))	Overloaded. Produces the set difference of two sequences by using the specified IEqualityComparer(Of T) to compare values. (Defined by Enumerable.)
  	First(Of Char)	Overloaded. Returns the first element of a sequence. (Defined by Enumerable.)
  	First(Of Char)(Func(Of Char, Boolean))	Overloaded. Returns the first element in a sequence that satisfies a specified condition. (Defined by Enumerable.)
  	FirstOrDefault(Of Char)	Overloaded. Returns the first element of a sequence, or a default value if the sequence contains no elements. (Defined by Enumerable.)
  	FirstOrDefault(Of Char)(Func(Of Char, Boolean))	Overloaded. Returns the first element of the sequence that satisfies a condition or a default value if no such element is found. (Defined by Enumerable.)
  	GroupBy(Of Char, TKey)(Func(Of Char, TKey))	Overloaded. Groups the elements of a sequence according to a specified key selector function. (Defined by Enumerable.)
  	GroupBy(Of Char, TKey)(Func(Of Char, TKey), IEqualityComparer(Of TKey))	Overloaded. Groups the elements of a sequence according to a specified key selector function and compares the keys by using a specified comparer. (Defined by Enumerable.)
  	GroupBy(Of Char, TKey, TElement)(Func(Of Char, TKey), Func(Of Char, TElement))	Overloaded. Groups the elements of a sequence according to a specified key selector function and projects the elements for each group by using a specified function. (Defined by Enumerable.)
  	GroupBy(Of Char, TKey, TResult)(Func(Of Char, TKey), Func(Of TKey, IEnumerable(Of Char), TResult))	Overloaded. Groups the elements of a sequence according to a specified key selector function and creates a result value from each group and its key. (Defined by Enumerable.)
  	GroupBy(Of Char, TKey, TElement)(Func(Of Char, TKey), Func(Of Char, TElement), IEqualityComparer(Of TKey))	Overloaded. Groups the elements of a sequence according to a key selector function. The keys are compared by using a comparer and each group's elements are projected by using a specified function. (Defined by Enumerable.)
  	GroupBy(Of Char, TKey, TResult)(Func(Of Char, TKey), Func(Of TKey, IEnumerable(Of Char), TResult), IEqualityComparer(Of TKey))	Overloaded. Groups the elements of a sequence according to a specified key selector function and creates a result value from each group and its key. The keys are compared by using a specified comparer. (Defined by Enumerable.)
  	GroupBy(Of Char, TKey, TElement, TResult)(Func(Of Char, TKey), Func(Of Char, TElement), Func(Of TKey, IEnumerable(Of TElement), TResult))	Overloaded. Groups the elements of a sequence according to a specified key selector function and creates a result value from each group and its key. The elements of each group are projected by using a specified function. (Defined by Enumerable.)
  	GroupBy(Of Char, TKey, TElement, TResult)(Func(Of Char, TKey), Func(Of Char, TElement), Func(Of TKey, IEnumerable(Of TElement), TResult), IEqualityComparer(Of TKey))	Overloaded. Groups the elements of a sequence according to a specified key selector function and creates a result value from each group and its key. Key values are compared by using a specified comparer, and the elements of each group are projected by using a specified function. (Defined by Enumerable.)
  	GroupJoin(Of Char, TInner, TKey, TResult)(IEnumerable(Of TInner), Func(Of Char, TKey), Func(Of TInner, TKey), Func(Of Char, IEnumerable(Of TInner), TResult))	Overloaded. Correlates the elements of two sequences based on equality of keys and groups the results. The default equality comparer is used to compare keys. (Defined by Enumerable.)
  	GroupJoin(Of Char, TInner, TKey, TResult)(IEnumerable(Of TInner), Func(Of Char, TKey), Func(Of TInner, TKey), Func(Of Char, IEnumerable(Of TInner), TResult), IEqualityComparer(Of TKey))	Overloaded. Correlates the elements of two sequences based on key equality and groups the results. A specified IEqualityComparer(Of T) is used to compare keys. (Defined by Enumerable.)
  	Intersect(Of Char)(IEnumerable(Of Char))	Overloaded. Produces the set intersection of two sequences by using the default equality comparer to compare values. (Defined by Enumerable.)
  	Intersect(Of Char)(IEnumerable(Of Char), IEqualityComparer(Of Char))	Overloaded. Produces the set intersection of two sequences by using the specified IEqualityComparer(Of T) to compare values. (Defined by Enumerable.)
  	Join(Of Char, TInner, TKey, TResult)(IEnumerable(Of TInner), Func(Of Char, TKey), Func(Of TInner, TKey), Func(Of Char, TInner, TResult))	Overloaded. Correlates the elements of two sequences based on matching keys. The default equality comparer is used to compare keys. (Defined by Enumerable.)
  	Join(Of Char, TInner, TKey, TResult)(IEnumerable(Of TInner), Func(Of Char, TKey), Func(Of TInner, TKey), Func(Of Char, TInner, TResult), IEqualityComparer(Of TKey))	Overloaded. Correlates the elements of two sequences based on matching keys. A specified IEqualityComparer(Of T) is used to compare keys. (Defined by Enumerable.)
  	Last(Of Char)	Overloaded. Returns the last element of a sequence. (Defined by Enumerable.)
  	Last(Of Char)(Func(Of Char, Boolean))	Overloaded. Returns the last element of a sequence that satisfies a specified condition. (Defined by Enumerable.)
  	LastOrDefault(Of Char)	Overloaded. Returns the last element of a sequence, or a default value if the sequence contains no elements. (Defined by Enumerable.)
  	LastOrDefault(Of Char)(Func(Of Char, Boolean))	Overloaded. Returns the last element of a sequence that satisfies a condition or a default value if no such element is found. (Defined by Enumerable.)
  	LongCount(Of Char)	Overloaded. Returns an Int64 that represents the total number of elements in a sequence. (Defined by Enumerable.)
  	LongCount(Of Char)(Func(Of Char, Boolean))	Overloaded. Returns an Int64 that represents how many elements in a sequence satisfy a condition. (Defined by Enumerable.)
  	Max(Of Char)	Overloaded. Returns the maximum value in a generic sequence. (Defined by Enumerable.)
  	Max(Of Char)(Func(Of Char, Int32))	Overloaded. Invokes a transform function on each element of a sequence and returns the maximum Int32 value. (Defined by Enumerable.)
  	Max(Of Char)(Func(Of Char, Nullable(Of Int32)))	Overloaded. Invokes a transform function on each element of a sequence and returns the maximum nullable Int32 value. (Defined by Enumerable.)
  	Max(Of Char)(Func(Of Char, Int64))	Overloaded. Invokes a transform function on each element of a sequence and returns the maximum Int64 value. (Defined by Enumerable.)
  	Max(Of Char)(Func(Of Char, Nullable(Of Int64)))	Overloaded. Invokes a transform function on each element of a sequence and returns the maximum nullable Int64 value. (Defined by Enumerable.)
  	Max(Of Char)(Func(Of Char, Single))	Overloaded. Invokes a transform function on each element of a sequence and returns the maximum Single value. (Defined by Enumerable.)
  	Max(Of Char)(Func(Of Char, Nullable(Of Single)))	Overloaded. Invokes a transform function on each element of a sequence and returns the maximum nullable Single value. (Defined by Enumerable.)
  	Max(Of Char)(Func(Of Char, Double))	Overloaded. Invokes a transform function on each element of a sequence and returns the maximum Double value. (Defined by Enumerable.)
  	Max(Of Char)(Func(Of Char, Nullable(Of Double)))	Overloaded. Invokes a transform function on each element of a sequence and returns the maximum nullable Double value. (Defined by Enumerable.)
  	Max(Of Char)(Func(Of Char, Decimal))	Overloaded. Invokes a transform function on each element of a sequence and returns the maximum Decimal value. (Defined by Enumerable.)
  	Max(Of Char)(Func(Of Char, Nullable(Of Decimal)))	Overloaded. Invokes a transform function on each element of a sequence and returns the maximum nullable Decimal value. (Defined by Enumerable.)
  	Max(Of Char, TResult)(Func(Of Char, TResult))	Overloaded. Invokes a transform function on each element of a generic sequence and returns the maximum resulting value. (Defined by Enumerable.)
  	Min(Of Char)	Overloaded. Returns the minimum value in a generic sequence. (Defined by Enumerable.)
  	Min(Of Char)(Func(Of Char, Int32))	Overloaded. Invokes a transform function on each element of a sequence and returns the minimum Int32 value. (Defined by Enumerable.)
  	Min(Of Char)(Func(Of Char, Nullable(Of Int32)))	Overloaded. Invokes a transform function on each element of a sequence and returns the minimum nullable Int32 value. (Defined by Enumerable.)
  	Min(Of Char)(Func(Of Char, Int64))	Overloaded. Invokes a transform function on each element of a sequence and returns the minimum Int64 value. (Defined by Enumerable.)
  	Min(Of Char)(Func(Of Char, Nullable(Of Int64)))	Overloaded. Invokes a transform function on each element of a sequence and returns the minimum nullable Int64 value. (Defined by Enumerable.)
  	Min(Of Char)(Func(Of Char, Single))	Overloaded. Invokes a transform function on each element of a sequence and returns the minimum Single value. (Defined by Enumerable.)
  	Min(Of Char)(Func(Of Char, Nullable(Of Single)))	Overloaded. Invokes a transform function on each element of a sequence and returns the minimum nullable Single value. (Defined by Enumerable.)
  	Min(Of Char)(Func(Of Char, Double))	Overloaded. Invokes a transform function on each element of a sequence and returns the minimum Double value. (Defined by Enumerable.)
  	Min(Of Char)(Func(Of Char, Nullable(Of Double)))	Overloaded. Invokes a transform function on each element of a sequence and returns the minimum nullable Double value. (Defined by Enumerable.)
  	Min(Of Char)(Func(Of Char, Decimal))	Overloaded. Invokes a transform function on each element of a sequence and returns the minimum Decimal value. (Defined by Enumerable.)
  	Min(Of Char)(Func(Of Char, Nullable(Of Decimal)))	Overloaded. Invokes a transform function on each element of a sequence and returns the minimum nullable Decimal value. (Defined by Enumerable.)
  	Min(Of Char, TResult)(Func(Of Char, TResult))	Overloaded. Invokes a transform function on each element of a generic sequence and returns the minimum resulting value. (Defined by Enumerable.)
  	OfType(Of TResult)	Filters the elements of an IEnumerable based on a specified type. (Defined by Enumerable.)
  	OrderBy(Of Char, TKey)(Func(Of Char, TKey))	Overloaded. Sorts the elements of a sequence in ascending order according to a key. (Defined by Enumerable.)
  	OrderBy(Of Char, TKey)(Func(Of Char, TKey), IComparer(Of TKey))	Overloaded. Sorts the elements of a sequence in ascending order by using a specified comparer. (Defined by Enumerable.)
  	OrderByDescending(Of Char, TKey)(Func(Of Char, TKey))	Overloaded. Sorts the elements of a sequence in descending order according to a key. (Defined by Enumerable.)
  	OrderByDescending(Of Char, TKey)(Func(Of Char, TKey), IComparer(Of TKey))	Overloaded. Sorts the elements of a sequence in descending order by using a specified comparer. (Defined by Enumerable.)
  	Reverse(Of Char)	Inverts the order of the elements in a sequence. (Defined by Enumerable.)
  	Select(Of Char, TResult)(Func(Of Char, TResult))	Overloaded. Projects each element of a sequence into a new form. (Defined by Enumerable.)
  	Select(Of Char, TResult)(Func(Of Char, Int32, TResult))	Overloaded. Projects each element of a sequence into a new form by incorporating the element's index. (Defined by Enumerable.)
  	SelectMany(Of Char, TResult)(Func(Of Char, IEnumerable(Of TResult)))	Overloaded. Projects each element of a sequence to an IEnumerable(Of T) and flattens the resulting sequences into one sequence. (Defined by Enumerable.)
  	SelectMany(Of Char, TResult)(Func(Of Char, Int32, IEnumerable(Of TResult)))	Overloaded. Projects each element of a sequence to an IEnumerable(Of T), and flattens the resulting sequences into one sequence. The index of each source element is used in the projected form of that element. (Defined by Enumerable.)
  	SelectMany(Of Char, TCollection, TResult)(Func(Of Char, Int32, IEnumerable(Of TCollection)), Func(Of Char, TCollection, TResult))	Overloaded. Projects each element of a sequence to an IEnumerable(Of T), flattens the resulting sequences into one sequence, and invokes a result selector function on each element therein. The index of each source element is used in the intermediate projected form of that element. (Defined by Enumerable.)
  	SelectMany(Of Char, TCollection, TResult)(Func(Of Char, IEnumerable(Of TCollection)), Func(Of Char, TCollection, TResult))	Overloaded. Projects each element of a sequence to an IEnumerable(Of T), flattens the resulting sequences into one sequence, and invokes a result selector function on each element therein. (Defined by Enumerable.)
  	SequenceEqual(Of Char)(IEnumerable(Of Char))	Overloaded. Determines whether two sequences are equal by comparing the elements by using the default equality comparer for their type. (Defined by Enumerable.)
  	SequenceEqual(Of Char)(IEnumerable(Of Char), IEqualityComparer(Of Char))	Overloaded. Determines whether two sequences are equal by comparing their elements by using a specified IEqualityComparer(Of T). (Defined by Enumerable.)
  	Single(Of Char)	Overloaded. Returns the only element of a sequence, and throws an exception if there is not exactly one element in the sequence. (Defined by Enumerable.)
  	Single(Of Char)(Func(Of Char, Boolean))	Overloaded. Returns the only element of a sequence that satisfies a specified condition, and throws an exception if more than one such element exists. (Defined by Enumerable.)
  	SingleOrDefault(Of Char)	Overloaded. Returns the only element of a sequence, or a default value if the sequence is empty; this method throws an exception if there is more than one element in the sequence. (Defined by Enumerable.)
  	SingleOrDefault(Of Char)(Func(Of Char, Boolean))	Overloaded. Returns the only element of a sequence that satisfies a specified condition or a default value if no such element exists; this method throws an exception if more than one element satisfies the condition. (Defined by Enumerable.)
  	Skip(Of Char)	Bypasses a specified number of elements in a sequence and then returns the remaining elements. (Defined by Enumerable.)
  	SkipWhile(Of Char)(Func(Of Char, Boolean))	Overloaded. Bypasses elements in a sequence as long as a specified condition is true and then returns the remaining elements. (Defined by Enumerable.)
  	SkipWhile(Of Char)(Func(Of Char, Int32, Boolean))	Overloaded. Bypasses elements in a sequence as long as a specified condition is true and then returns the remaining elements. The element's index is used in the logic of the predicate function. (Defined by Enumerable.)
  	Sum(Of Char)(Func(Of Char, Int32))	Overloaded. Computes the sum of the sequence of Int32 values that are obtained by invoking a transform function on each element of the input sequence. (Defined by Enumerable.)
  	Sum(Of Char)(Func(Of Char, Nullable(Of Int32)))	Overloaded. Computes the sum of the sequence of nullable Int32 values that are obtained by invoking a transform function on each element of the input sequence. (Defined by Enumerable.)
  	Sum(Of Char)(Func(Of Char, Int64))	Overloaded. Computes the sum of the sequence of Int64 values that are obtained by invoking a transform function on each element of the input sequence. (Defined by Enumerable.)
  	Sum(Of Char)(Func(Of Char, Nullable(Of Int64)))	Overloaded. Computes the sum of the sequence of nullable Int64 values that are obtained by invoking a transform function on each element of the input sequence. (Defined by Enumerable.)
  	Sum(Of Char)(Func(Of Char, Single))	Overloaded. Computes the sum of the sequence of Single values that are obtained by invoking a transform function on each element of the input sequence. (Defined by Enumerable.)
  	Sum(Of Char)(Func(Of Char, Nullable(Of Single)))	Overloaded. Computes the sum of the sequence of nullable Single values that are obtained by invoking a transform function on each element of the input sequence. (Defined by Enumerable.)
  	Sum(Of Char)(Func(Of Char, Double))	Overloaded. Computes the sum of the sequence of Double values that are obtained by invoking a transform function on each element of the input sequence. (Defined by Enumerable.)
  	Sum(Of Char)(Func(Of Char, Nullable(Of Double)))	Overloaded. Computes the sum of the sequence of nullable Double values that are obtained by invoking a transform function on each element of the input sequence. (Defined by Enumerable.)
  	Sum(Of Char)(Func(Of Char, Decimal))	Overloaded. Computes the sum of the sequence of Decimal values that are obtained by invoking a transform function on each element of the input sequence. (Defined by Enumerable.)
  	Sum(Of Char)(Func(Of Char, Nullable(Of Decimal)))	Overloaded. Computes the sum of the sequence of nullable Decimal values that are obtained by invoking a transform function on each element of the input sequence. (Defined by Enumerable.)
  	Take(Of Char)	Returns a specified number of contiguous elements from the start of a sequence. (Defined by Enumerable.)
  	TakeWhile(Of Char)(Func(Of Char, Boolean))	Overloaded. Returns elements from a sequence as long as a specified condition is true. (Defined by Enumerable.)
  	TakeWhile(Of Char)(Func(Of Char, Int32, Boolean))	Overloaded. Returns elements from a sequence as long as a specified condition is true. The element's index is used in the logic of the predicate function. (Defined by Enumerable.)
  	ToArray(Of Char)	Creates an array from a IEnumerable(Of T). (Defined by Enumerable.)
  	ToDictionary(Of Char, TKey)(Func(Of Char, TKey))	Overloaded. Creates a Dictionary(Of TKey, TValue) from an IEnumerable(Of T) according to a specified key selector function. (Defined by Enumerable.)
  	ToDictionary(Of Char, TKey)(Func(Of Char, TKey), IEqualityComparer(Of TKey))	Overloaded. Creates a Dictionary(Of TKey, TValue) from an IEnumerable(Of T) according to a specified key selector function and key comparer. (Defined by Enumerable.)
  	ToDictionary(Of Char, TKey, TElement)(Func(Of Char, TKey), Func(Of Char, TElement))	Overloaded. Creates a Dictionary(Of TKey, TValue) from an IEnumerable(Of T) according to specified key selector and element selector functions. (Defined by Enumerable.)
  	ToDictionary(Of Char, TKey, TElement)(Func(Of Char, TKey), Func(Of Char, TElement), IEqualityComparer(Of TKey))	Overloaded. Creates a Dictionary(Of TKey, TValue) from an IEnumerable(Of T) according to a specified key selector function, a comparer, and an element selector function. (Defined by Enumerable.)
  	ToList(Of Char)	Creates a List(Of T) from an IEnumerable(Of T). (Defined by Enumerable.)
  	ToLookup(Of Char, TKey)(Func(Of Char, TKey))	Overloaded. Creates a Lookup(Of TKey, TElement) from an IEnumerable(Of T) according to a specified key selector function. (Defined by Enumerable.)
  	ToLookup(Of Char, TKey)(Func(Of Char, TKey), IEqualityComparer(Of TKey))	Overloaded. Creates a Lookup(Of TKey, TElement) from an IEnumerable(Of T) according to a specified key selector function and key comparer. (Defined by Enumerable.)
  	ToLookup(Of Char, TKey, TElement)(Func(Of Char, TKey), Func(Of Char, TElement))	Overloaded. Creates a Lookup(Of TKey, TElement) from an IEnumerable(Of T) according to specified key selector and element selector functions. (Defined by Enumerable.)
  	ToLookup(Of Char, TKey, TElement)(Func(Of Char, TKey), Func(Of Char, TElement), IEqualityComparer(Of TKey))	Overloaded. Creates a Lookup(Of TKey, TElement) from an IEnumerable(Of T) according to a specified key selector function, a comparer and an element selector function. (Defined by Enumerable.)
  	Union(Of Char)(IEnumerable(Of Char))	Overloaded. Produces the set union of two sequences by using the default equality comparer. (Defined by Enumerable.)
  	Union(Of Char)(IEnumerable(Of Char), IEqualityComparer(Of Char))	Overloaded. Produces the set union of two sequences by using a specified IEqualityComparer(Of T). (Defined by Enumerable.)
  	Where(Of Char)(Func(Of Char, Boolean))	Overloaded. Filters a sequence of values based on a predicate. (Defined by Enumerable.)
  	Where(Of Char)(Func(Of Char, Int32, Boolean))	Overloaded. Filters a sequence of values based on a predicate. Each element's index is used in the logic of the predicate function. (Defined by Enumerable.)
	Zip(Of Char, TSecond, TResult)	Applies a specified function to the corresponding elements of two sequences, producing a sequence of the results. (Defined by Enumerable.)

Fields
    	Empty	Represents the empty string. This field is read-only.


Explicit Interface Implementations
	IConvertible.ToBoolean	Infrastructure. For a description of this member, see ToBoolean.
    	IConvertible.ToByte	Infrastructure. For a description of this member, see ToByte.
    	IConvertible.ToChar	Infrastructure. For a description of this member, see ToChar.
    	IConvertible.ToDateTime	Infrastructure. For a description of this member, see ToDateTime.
    	IConvertible.ToDecimal	Infrastructure. For a description of this member, see ToDecimal.
    	IConvertible.ToDouble	Infrastructure. For a description of this member, see ToDouble.
    	IConvertible.ToInt16	Infrastructure. For a description of this member, see ToInt16.
    	IConvertible.ToInt32	Infrastructure. For a description of this member, see ToInt32.
    	IConvertible.ToInt64	Infrastructure. For a description of this member, see ToInt64.
    	IConvertible.ToSByte	Infrastructure. For a description of this member, see ToSByte.
    	IConvertible.ToSingle	Infrastructure. For a description of this member, see ToSingle.
    	IConvertible.ToType	Infrastructure. For a description of this member, see ToType.
    	IConvertible.ToUInt16	Infrastructure. For a description of this member, see ToUInt16.
    	IConvertible.ToUInt32	Infrastructure. For a description of this member, see ToUInt32.
    	IConvertible.ToUInt64	Infrastructure. For a description of this member, see ToUInt64.
    	IEnumerable(Of Char).GetEnumerator	Returns an enumerator that iterates through the current String object.
    	IEnumerable.GetEnumerator	Returns an enumerator that iterates through the current String object.